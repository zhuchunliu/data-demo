
sharding.jdbc.datasource.names=ds_0,ds_1,slave_0,slave_1

## 1: 配置第一个数据源
sharding.jdbc.datasource.ds_0.type=org.apache.commons.dbcp.BasicDataSource
sharding.jdbc.datasource.ds_0.driver-class-name=com.mysql.jdbc.Driver
sharding.jdbc.datasource.ds_0.url=jdbc:mysql://localhost:3306/demo_ds_0?characterEncoding=utf8&useSSL=true&serverTimezone=Hongkong
sharding.jdbc.datasource.ds_0.username=root
sharding.jdbc.datasource.ds_0.password=123456

## 2: 配置第二个数据源
sharding.jdbc.datasource.ds_1.type=org.apache.commons.dbcp.BasicDataSource
sharding.jdbc.datasource.ds_1.driver-class-name=com.mysql.jdbc.Driver
sharding.jdbc.datasource.ds_1.url=jdbc:mysql://localhost:3306/demo_ds_1?characterEncoding=utf8&useSSL=true&serverTimezone=Hongkong
sharding.jdbc.datasource.ds_1.username=root
sharding.jdbc.datasource.ds_1.password=123456


## 3: 配置全局的分库规则；   如果不设置全局默认的分库规则，就需要对表单独设置分库规则【如4.1】；   如果都不设置，则每个库下面数据一样，都是全数据
# 除了可以做全局默认分库规则，也可以做全局默认分表规则，以下分库分表策略只能选择一个
## 3.1 行表达式分片策略
sharding.jdbc.config.sharding.default-database-strategy.inline.sharding-column=user_id
sharding.jdbc.config.sharding.default-database-strategy.inline.algorithm-expression=ds_$->{user_id % 2}


## 3.2 用于单分片键的标准分片场景
#sharding.jdbc.config.sharding.default-database-strategy.standard.sharding-column=user_id
# 精确分片算法类名称，用于=和IN。该类需实现PreciseShardingAlgorithm接口并提供无参数的构造器
#sharding.jdbc.config.sharding.default-database-strategy.standard.precise-algorithm-class-name=com.person.demo.algorithm.MinePreciseShardingAlgorithm
# 范围分片算法类名称，用于BETWEEN，可选。该类需实现RangeShardingAlgorithm接口并提供无参数的构造器
#sharding.jdbc.config.sharding.default-database-strategy.standard.range-algorithm-class-name=com.person.demo.algorithm.MineRangeShardingAlgorithm

## 3.3用于多分片键的复合分片场景：
# 分片列名称，多个列以逗号分隔；
#sharding.jdbc.config.sharding.tables.default-table-strategy.database-strategy.complex.sharding-columns= user
# _id
# 复合分片算法类名称。该类需实现ComplexKeysShardingAlgorithm接口并提供无参数的构造器
#sharding.jdbc.config.sharding.tables.default-table-strategy.database-strategy.complex.algorithm-class-name=


## 3.4 int分片策略 Hint分片算法类名称。该类需实现HintShardingAlgorithm接口并提供无参数的构造器
#sharding.jdbc.config.sharding.tables.default-table-strategy.database-strategy.hint.algorithmClassName=


## 4: 配置分表规则，id自增设置；代码操作时候表名为下面定义的：t_order,t_order为logic_table属性值
sharding.jdbc.config.sharding.tables.t_order.actual-data-nodes=ds_$->{0..1}.t_order_$->{0..1}
sharding.jdbc.config.sharding.tables.t_order.table-strategy.inline.sharding-column=order_id
sharding.jdbc.config.sharding.tables.t_order.table-strategy.inline.algorithm-expression=t_order_$->{order_id % 2}

### 4:1如果没有配置全局默认的分库规则，此处可以单独给表配置分库规则; 如果都设置，此处配置会覆盖默认default分库规则【即3.1步骤设置的规则】
#sharding.jdbc.config.sharding.tables.t_order.databaseStrategy.inline.sharding-column=user_id
#sharding.jdbc.config.sharding.tables.t_order.databaseStrategy.inline.algorithm-expression=ds_$->{user_id % 2}

### 4.2如果手动设置了order_id主键值，则不会生成默认的主键，以手动生成的主键为准
sharding.jdbc.config.sharding.tables.t_order.key-generator-column-name=order_id


### 5:设置t_order_item，同步骤4【有业务关联的表，关联数据必须放一个库，切表规则可以不同，但是跨库会查询不到数据，
# 即t_order_item.order_id为1的数据 与 对应t_order.order_id为1的数据必须同库，这样join才能查询到，可以看sql日志】
sharding.jdbc.config.sharding.tables.t_order_item.actual-data-nodes=ds_$->{0..1}.t_order_item_$->{0..1}
sharding.jdbc.config.sharding.tables.t_order_item.table-strategy.inline.sharding-column=order_id
sharding.jdbc.config.sharding.tables.t_order_item.table-strategy.inline.algorithm-expression=t_order_item_$->{order_id % 2}
sharding.jdbc.config.sharding.tables.t_order_item.key-generator-column-name=order_item_id


#6全局配置
#是否开启SQL显示，默认值: false
sharding.jdbc.config.sharding.props.sql.show=true
#工作线程数量，默认值: CPU核数
sharding.jdbc.config.sharding.props.executor.size=4




##7 配置从数据库
sharding.jdbc.datasource.slave_0.type=org.apache.commons.dbcp.BasicDataSource
sharding.jdbc.datasource.slave_0.driver-class-name=com.mysql.jdbc.Driver
sharding.jdbc.datasource.slave_0.url=jdbc:mysql://localhost:3307/demo_ds_0?characterEncoding=utf8&useSSL=true&serverTimezone=Hongkong
sharding.jdbc.datasource.slave_0.username=root
sharding.jdbc.datasource.slave_0.password=123456

sharding.jdbc.datasource.slave_1.type=org.apache.commons.dbcp.BasicDataSource
sharding.jdbc.datasource.slave_1driver-class-name=com.mysql.jdbc.Driver
sharding.jdbc.datasource.slave_1.url=jdbc:mysql://localhost:3307/demo_ds_1?characterEncoding=utf8&useSSL=true&serverTimezone=Hongkong
sharding.jdbc.datasource.slave_1.username=root
sharding.jdbc.datasource.slave_1.password=123456

## 7.1配置主从关系
sharding.jdbc.config.sharding.master-slave-rules.ds_0.master-data-source-name=ds_0
sharding.jdbc.config.sharding.master-slave-rules.ds_0.slave-data-source-names=slave_0
sharding.jdbc.config.sharding.master-slave-rules.ds_1.master-data-source-name=ds_1
sharding.jdbc.config.sharding.master-slave-rules.ds_1.slave-data-source-names=slave_1


